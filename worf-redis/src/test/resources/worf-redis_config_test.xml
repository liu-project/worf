<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<description>redis配置 </description>

	<context:property-placeholder location="classpath:conf/redis.properties" ignore-unresolvable="true"/>
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
		
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}"/>
		<property name="maxIdle" value="${redis.maxIdle}"/>
		<property name="minIdle" value="${redis.minIdle}"/>
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
		<property name="testOnBorrow" value="${redis.testOnBorrow}"/>
		<property name="testOnReturn" value="${redis.testOnReturn}"/>
	</bean>
	
	<bean id="shardJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${jedisShardInfo1.host}" />
                    <constructor-arg name="port" value="${jedisShardInfo1.port}" />
                    <constructor-arg name="timeout" value="${jedisShardInfo1.connectionTimeout}" />
                    <constructor-arg name="weight" value="${jedisShardInfo1.weight}" />
                    <property name="password" value="#{'${jedisShardInfo1.password}'!=''?'${jedisShardInfo1.password}':null}"/>
                </bean>
            </list>
        </constructor-arg>
	</bean>
	
	<bean id="activityShardJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${jedisShardInfo2.host}" />
                    <constructor-arg name="port" value="${jedisShardInfo2.port}" />
                    <constructor-arg name="timeout" value="${jedisShardInfo2.connectionTimeout}" />
                    <constructor-arg name="weight" value="${jedisShardInfo2.weight}" />
                    <property name="password" value="#{'${jedisShardInfo2.password}'!=''?'${jedisShardInfo2.password}':null}"/>
                </bean>
            </list>
        </constructor-arg>
	</bean>
	
	<bean id="redisDataSourceImpl" class="orj.worf.redis.impl.RedisDataSourceImpl" init-method="init">
		<property name="minIdle" value="${redis.minIdle}"/>
		<property name="jedisPoolMap">
			<map>
				<entry key="defaultRedisDataSource" value-ref="shardJedisPool"/>
				<entry key="activityRedisDataSource" value-ref="activityShardJedisPool"/>
			</map>
		</property>
	</bean>
	
	<bean id="redisClientTemplateImpl" class="orj.worf.redis.impl.RedisClientTemplateImpl">
		<property name="dataSource" ref="redisDataSourceImpl"/>
	</bean>
	
	
	<bean id="redisDtaSourceAspect" class="orj.worf.redis.pointcut.DataSourceAspect" />
	
	<aop:config>
        <aop:aspect ref="redisDtaSourceAspect" order="126">
            <aop:pointcut id="redisDataSourcePointcut" expression="orj.worf.redis.pointcut.DataSourcePointcuts.dsMarkPointcut()"/>
            <aop:before pointcut-ref="redisDataSourcePointcut" method="intercept" />
            <aop:after pointcut-ref="redisDataSourcePointcut" method="interceptAfter" />
        </aop:aspect>
    </aop:config>
</beans>